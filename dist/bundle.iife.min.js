var KenshoForm=function(){"use strict";const r=new Map,e={add(e,t){if("string"!=typeof e)throw new Error('The argument "name" must be a string.');if(""===e)throw new Error("Empty string are not accepted.");if("function"!=typeof t)throw new Error('The argument "rule" must be a function.');if(r.get(e))throw new Error(`The "${e}" rule already exist.`);r.set(e,t)},remove(e){if("string"!=typeof e)throw new Error('The argument "name" must be a string.');if(""===e)throw new Error("Empty string are not accepted.");if(!r.get(e))throw new Error(`The "${e}" rule isn't existed.`);r.delete(e)},get(e){if("string"!=typeof e)throw new Error('The argument "name" must be a string.');if(""===e)throw new Error("Empty string are not accepted.");const t=r.get(e);if(void 0===t)throw new Error(`The "${e}" rule isn't found.`);return t}},t=new Map,o={add(r,e){if("string"!=typeof r)throw new Error('The argument "name" must be a string.');if(""===r)throw new Error("Empty string are not accepted.");if("function"!=typeof e)throw new Error('The argument "plugin" must be a function.');if(t.get(r))throw new Error(`The "${r}" plugin already exist.`);t.set(r,e)},remove(r){if("string"!=typeof r)throw new Error('The argument "name" must be a string.');if(""===r)throw new Error("Empty string are not accepted.");if(!t.get(r))throw new Error(`The "${r}" plugin isn't existed.`);t.delete(r)},get(r){if("string"!=typeof r)throw new Error('The argument "name" must be a string.');if(""===r)throw new Error("Empty string are not accepted.");const e=t.get(r);if(void 0===e)throw new Error(`The "${r}" plugin isn't found.`);return e},use(r){}};class n{static rule=e;static plugin=o;constructor(){}}const i={attrPrefix:"k-",errorMessageWrapper:"span",verbose:!0,errorClassName:"kensho-has-error",errorItemClassName:"kensho-error-message",search:!0,autocomplete:!1,HTML5novalidate:!0};return class extends n{constructor(r,e={}){if(super(),this.isDestroyed=!1,this.option=Object.assign({},i,e),Object.freeze(this.option),"string"==typeof r){const e=document.querySelector(r);if(null===e)throw new Error(`form "${r}" is not found.`);r=e}return this.form=r,this.defaultHasAutoCompleteAttr=null!==this.form.getAttribute("autocomplete"),this.defaultAutoComplete=this.form.autocomplete,this.option.autocomplete||(this.form.setAttribute("autocomplete","off"),this.form.autocomplete="off"),this.units=new Map,this.form.classList.add("kensho-form"),this.option.search&&this.search(),this}search(){const r=this.option.attrPrefix,e=this.form.querySelectorAll(`*[${r}name]`),t={};for(const o of e){let e=o.getAttribute(`${r}name`);const n=/\.error$/.test(e)?"error":"input";if("error"===n&&(e=e.replace(".error","")),void 0===t[e]&&(t[e]={}),"input"===n){if(void 0!==t[e].input)throw new Error(`The value "${e}" in ${r}name attr is duplicated.`);t[e].input=o}else if("error"===n){if(void 0!==t[e].error)throw new Error(`The value "${e}.error" in ${r}name attr is duplicated.`);t[e].error=o}}for(const[r,e]of Object.entries(t))console.log(r,e,e.input)}addFromUnitElements(){}}}();
//# sourceMappingURL=bundle.iife.min.js.map
